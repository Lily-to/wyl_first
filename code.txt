###Bayesian A/B testing
#data(basedata)
library(readxl)
data1 <- read_excel("F:/R data/basedata.xlsx",sheet = 4)
data2 <- read_excel("F:/R data/basedata.xlsx",sheet = 5)
data3 <- read_excel("F:/R data/basedata.xlsx",sheet = 6)

###bayesAB
library("bayesAB")
AC1 <- bayesTest(data1$R1,data2$R1,
                  priors = c('alpha' = 1, 'beta' = 1), 
                  distribution = 'bernoulli')
summary(AC1)
plot(AC1)
AC2 <- bayesTest(data1$R1,data3$R3,
                  priors = c('alpha' = 1, 'beta' = 1), 
                  distribution = 'bernoulli')
summary(AC2)
plot(AC2)
AC3 <- bayesTest(data2$R2,data3$R3,
                 priors = c('alpha' = 1, 'beta' = 1), 
                 distribution = 'bernoulli')
summary(AC3)
plot(AC3)


###matchit 
#data(matchit)
library(readxl)
T1T2 <- read_excel("C:/Users/matchit.xlsx",sheet = 2)
T3T2 <- read_excel("C:/Users/matchit.xlsx",sheet = 3)
T3T1 <- read_excel("C:/Users/matchit.xlsx",sheet = 4)
library(MatchIt)
library(tableone)
library(captioner)
library(wakefield)
library(knitr)
pacman::p_load(knitr, wakefield, MatchIt, tableone, captioner)


#T1T2
matchit4 <- matchit(group ~ race + gender+age+time_in_hospital+max_glu_serum+A1Cresult, data = T1T2, method="nearest", ratio=1)
a4 <- summary(matchit4)
kable(a4$nn, digits = 2, align = 'c', 
      caption = 'Table 2: Sample sizes')
kable(a4$sum.matched[c(1,2,4)], digits = 2, align = 'c', 
      caption = 'Table 3: Summary of balance for matched data')
plot(matchit4, type = 'jitter', interactive = FALSE)

df.match4 <- match.data(matchit4)[1:ncol(T1T0)]
pacman::p_load(tableone)
table4 <- CreateTableOne(vars = c("race","gender","age", "time_in_hospital","max_glu_serum","A1Cresult"), 
                         data = df.match4, 
                         factorVars = 'gender') 
table4 <- print(table4, 
                printToggle = FALSE, 
                noSpaces = TRUE)

kable(table4[,1:3],  
      align = 'c', 
      caption = 'Table 3: Comparison of matched samples')
write.csv(df.match4,"df.match4.csv")

#T3T2
matchit5 <- matchit(group ~ race + gender+age+time_in_hospital+max_glu_serum+A1Cresult, data = T3T2, method="nearest", ratio=1)
a5 <- summary(matchit5)
kable(a5$nn, digits = 2, align = 'c', 
      caption = 'Table 2: Sample sizes')
kable(a5$sum.matched[c(1,2,4)], digits = 2, align = 'c', 
      caption = 'Table 3: Summary of balance for matched data')
plot(matchit5, type = 'jitter', interactive = FALSE)

df.match5 <- match.data(matchit5)[1:ncol(T1T0)]
pacman::p_load(tableone)
table5 <- CreateTableOne(vars = c("race","gender","age", "time_in_hospital","max_glu_serum","A1Cresult"), 
                         data = df.match5, 
                         factorVars = 'gender') 
table5 <- print(table5, 
                printToggle = FALSE, 
                noSpaces = TRUE)

kable(table5[,1:3],  
      align = 'c', 
      caption = 'Table 3: Comparison of matched samples')
write.csv(df.match5,"df.match5.csv")

#T3T1
matchit6 <- matchit(group ~ race + gender+age+time_in_hospital+max_glu_serum+A1Cresult, data = T3T1, method="nearest", ratio=1)
a6 <- summary(matchit6)
kable(a6$nn, digits = 2, align = 'c', 
      caption = 'Table 2: Sample sizes')
kable(a6$sum.matched[c(1,2,4)], digits = 2, align = 'c', 
      caption = 'Table 3: Summary of balance for matched data')
plot(matchit6, type = 'jitter', interactive = FALSE)

df.match6 <- match.data(matchit6)[1:ncol(T1T0)]
pacman::p_load(tableone)
table6 <- CreateTableOne(vars = c("race","gender","age", "time_in_hospital","max_glu_serum","A1Cresult"), 
                         data = df.match6, 
                         factorVars = 'gender') 
table6 <- print(table6, 
                printToggle = FALSE, 
                noSpaces = TRUE)

kable(table6[,1:3],  
      align = 'c', 
      caption = 'Table 3: Comparison of matched samples')
write.csv(df.match6,"df.match6.csv")

